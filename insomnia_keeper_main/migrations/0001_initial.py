# Generated by Django 4.0.2 on 2022-03-11 21:51

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_mails', models.TextField(blank=True, null=True, verbose_name='Email-ы для оповещений через Enter')),
                ('sendgrid_api_key', models.CharField(default='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', max_length=1000, verbose_name='SendGrid API key')),
                ('sendgrid_sender_email', models.CharField(default='sales@magicvalleyschool.ru', max_length=1000, verbose_name='SendGrid Sender Email')),
                ('active', models.BooleanField(default=True, verbose_name='Активно')),
            ],
            options={
                'verbose_name': 'Пресет админских настроек',
                'verbose_name_plural': 'Админские настройки',
            },
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pathname', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Путь')),
                ('stack', models.TextField(blank=True, max_length=5000, null=True, verbose_name='Трейс')),
                ('browser_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Браузер')),
                ('full_version', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Версия браузера')),
                ('major_version', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Версия браузера 2')),
                ('navigator_app_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='navigator_app_name')),
                ('navigator_user_agent', models.CharField(blank=True, max_length=1000, null=True, verbose_name='User Agent')),
                ('os_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='OS')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Ошибка фронта',
                'verbose_name_plural': 'Ошибки фронта',
            },
        ),
        migrations.CreateModel(
            name='Fixed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Контактный номер телефона')),
                ('whatsapp_number', models.PositiveBigIntegerField(blank=True, help_text='В междунарожном формате, подробнее <a href="https://faq.whatsapp.com/general/chats/how-to-use-click-to-chat" target="_blank">тут</a>', null=True, verbose_name='WhatsApp номер')),
                ('instagram_username', models.CharField(blank=True, max_length=200, null=True, verbose_name='Instagram username')),
                ('telegram_link', models.CharField(blank=True, max_length=200, null=True, verbose_name='Telegram link')),
                ('facebook_username', models.CharField(blank=True, help_text='https://facebook.com/<ваш username>/', max_length=50, null=True, verbose_name='Facebook username')),
                ('active', models.BooleanField(default=True, verbose_name='Активно')),
            ],
            options={
                'verbose_name': 'Пресет настройки',
                'verbose_name_plural': 'Глобальные настройки',
            },
        ),
        migrations.CreateModel(
            name='Keeper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('btc_wallet_address', models.CharField(max_length=1000, unique=True, verbose_name='Bitcoin адрес')),
                ('btc_wallet_balance', models.DecimalField(decimal_places=100, default=0, max_digits=150, verbose_name='Bitcoin баланс')),
                ('eth_wallet_address', models.CharField(max_length=1000, unique=True, verbose_name='Etherium адрес')),
                ('eth_wallet_balance', models.DecimalField(decimal_places=100, default=0, max_digits=150, verbose_name='Etherium баланс')),
                ('ton_wallet_address', models.CharField(max_length=1000, unique=True, verbose_name='Toncoin адрес')),
                ('ton_wallet_balance', models.DecimalField(decimal_places=100, default=0, max_digits=150, verbose_name='Toncoin баланс')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Имя')),
                ('surname', models.CharField(blank=True, max_length=150, null=True, verbose_name='Фамилия')),
                ('tag', models.CharField(max_length=150, unique=True, verbose_name='Тег')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('activation', 'Отправленна ссылка активации'), ('active', 'Активен')], default='activation', max_length=10, verbose_name='Статус')),
                ('access_status', models.CharField(choices=[('default', 'Обычный'), ('admin', 'Админ')], default='default', max_length=100, verbose_name='Права')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
        migrations.CreateModel(
            name='Rules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Правила')),
                ('active', models.BooleanField(default=True, verbose_name='Активно')),
            ],
            options={
                'verbose_name': 'Пресет правил',
                'verbose_name_plural': 'Правила',
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(choices=[('btc', 'Bitcoin'), ('eth', 'Etherium'), ('ton', 'Toncoin')], max_length=10, verbose_name='Валюта')),
                ('address', models.CharField(max_length=1000, unique=True, verbose_name='Адрес')),
                ('secret_key', models.CharField(max_length=10000, verbose_name='Secret key')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='insomnia_keeper_main.profile', verbose_name='Владелец')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(choices=[('btc', 'Bitcoin'), ('eth', 'Etherium'), ('ton', 'Toncoin')], max_length=10, verbose_name='Валюта')),
                ('amount', models.DecimalField(decimal_places=100, default=0, max_digits=150, verbose_name='Количество')),
                ('to_address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Адрес получателя')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('from_keeper', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transaction_from_keeper', to='insomnia_keeper_main.keeper', verbose_name='Кипер отправителя')),
                ('to_keeper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transaction_to_keeper', to='insomnia_keeper_main.keeper', verbose_name='Кипер получателя')),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
            },
        ),
        migrations.CreateModel(
            name='ResetPasswordVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=500, null=True, verbose_name='Ключ подтверждения')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ключ подверждения сброса пароля',
                'verbose_name_plural': 'Ключи подверждения сброса пароля',
            },
        ),
        migrations.AddField(
            model_name='keeper',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='insomnia_keeper_main.profile', verbose_name='Владелец'),
        ),
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_email', models.EmailField(max_length=120, verbose_name='Новый e-mail')),
                ('key', models.CharField(blank=True, max_length=500, null=True, verbose_name='Ключ подтверждения')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ключ подверждения email',
                'verbose_name_plural': 'Ключи подверждения email',
            },
        ),
    ]
